# Basic mesh-related data.
mesh:
  enabled: false
  # Add an error page as html if provided.
  # This allows us to correctly send our properly formatted error pages
  # to our users, see T287983
  error_page: ~
  image_name: envoy
  image_version: latest
  certmanager:
    # Override the hostname used for certificates. By default .Release.Namespace will be used.
    # Together with mesh.certmanager.domains this generates a list of FQDNs used in the
    # certificates SAN (in for of {{ default_host }}.{{ domain }}).
    default_host: ~
    # List of domains to generate FQDNs for. This is usually specified by the environment
    # and does not need to be set on a per chart/per deployment level.
    domains:
      - discovery.wmnet
      - svc.codfw.wmnet
      - svc.eqiad.wmnet
    # disableDefaultHosts may be set to true if the service should not be reachable via
    # the hosts generated by default (see above).
    disableDefaultHosts: false
    # Allow to specify extra FQDNs that should be in the SAN.
    # If disableDefaultHosts is true, these will be the only FQDNs in SAN.
    extraFQDNs:
      - some.extra.domain
  # http keepalive timeout for incoming requests
  idle_timeout: "4.5s"
  # Port to listen to
  public_port: 8080
  local_access_log_min_code: "200"
  # Specify a retry policy for the upstream cluster of the TLS terminator.
  # Without this specified there are no retries
  # upstream_retry_policy:
  #  retry_on: 5xx
  #  num_retries: 1
  # Headers to add to a local request,
  # in dictionary form.
  request_headers_to_add: []
  # Timeout of a request to the local service
  upstream_timeout: "60s"
  # timeout for an idle upstream connection - 300s is the envoy default
  upstream_idle_timeout: "300s"
  # Enabling telemetry, telemetry port.
  telemetry:
    enabled: true
    port: 1667
  resources:
    requests:
      cpu: 200m
      memory: 100Mi
    limits:
      cpu: 500m
      memory: 500Mi
  # Define a different port for the envoy admin interface
  # and/or drain strategy settings.
  admin:
    # bind_tcp needs to be true in order for all other options to work
    bind_tcp: false
    port: 1666
    # drain_time_s: "600"
    # drain_strategy: "gradual"
  # Enable staging/mlstaging for staging deployments.
  # This will ensure staging certificates will be issued.
  # staging: true
  # mlstaging: true

  # Tracing (via otel-collector) configuration
  # When enabled, all outbound requests will be traced
  tracing:
    enabled: false
    # Service name to use for distributed traces.
    # This is the top-level field by which traces are searchable, so it should be broadly meaningful.
    # By default, it is just the Kubernetes namespace name of the service.
    # This is a good default as most users have one logical service per namespace,
    # and namespaces usually have a terse but meaningful name.
    # For services that have distinct logical services in one namespace, or for services that
    # distinguish between logical services by some other means like release names,
    # you should override this field.
    # (see also https://phabricator.wikimedia.org/T363407)
    service_name: ~
    # sampling: 100. Percentage of requests to sample. Defaults to 100%
    # host: hostname to talk to. default main-opentelemetry-collector.opentelemetry-collector.svc.cluster.local
    # port: grpc port to use. default 4317
    # otel_collector_namespace: the namespace where the collector daemonset is running. default opentelemetry-collector
    # otel_pod_selector: the pod selector for otel collector egress. default component=agent-collector
  faultinjection:
    enabled: false
    # http_status: 503
    # pct: 0

# Mesh-related discovery
# TODO: move under mesh.* once we can
discovery:
  # List of listeners
  listeners: []

# Mesh related pure TCP proxies
tcp_proxy:
  listeners: []

# Should be provided by configuration management.
# See details of the structures in the comments
# In the configuration module.
services_proxy: ~
tcp_services_proxy: ~

app:
  port: 8088

docker:
  registry: "docker-registry.wikimedia.org"
  pull_policy: IfNotPresent
