# Default values for shellbox.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
helm_scaffold_version: 0.2
docker:
  registry: docker-registry.wikimedia.org
  pull_policy: IfNotPresent
resources:
  replicas: 1
main_app:
  port: 8080 # port exposed as a Service, also used by service-checker.
  command: []
  args: []
  requests:
    cpu: 100m
    memory: 1024Mi
  limits:
    cpu: 1
    # $wgMaxShellMemory is 1024M, plus resources for other pod components
    memory: 2048Mi

# strategy can be used to configure .spec.strategy on the deployment. For
# example, the following is equivalent to the default:
#strategy:
#  type: RollingUpdate
#  rollingUpdate:
#    maxUnavailable: 25%
#    maxSurge: 25%
strategy: null

monitoring:
  enabled: true
  named_ports: true
service:
  # Select deployment: "none" to indicate that no k8s service should be
  # deployed for this release. This is useful together with the route_via
  # top-level value to instead serve a portion of traffic via the service
  # associated with another release, such as in the case of a canary.
  deployment: minikube # valid values are "production", "minikube", and "none"
  port:
    name: http
    # protocol: TCP # TCP is the default protocol
    targetPort: 8080 # the number or name of the exposed port on the container
    port: 8080 # the number of the port desired to be exposed to the cluster
    nodePort: null # you need to define this if "production" is used. In minikube environments let it autoallocate
config:
  public: {}
  private: {}

shellbox:
  secret_key: "@@ CHANGE THIS @@"
  # If version is not empty, the image used for shellbox will be
  # $registry/wikimedia/mediawiki-libs-shellbox:$version-$flavour
  # while it will just be
  # $registry/wikimedia/mediawiki-libs-shellbox:$flavour
  # otherwise. This is done so that you can control the shellbox version for all variants with a single,
  # global setting.
  version: ""
  flavour: score
  # Require that at least $min_avail_workers be free in the pod for it
  # to be seen as healthy.
  min_avail_workers: ~
  # parameters for the readiness check - if containing a value, these
  # parameters will be passed to the readiness check. For example, use
  # this check to set failureThreshold or periodSeconds.
  readinessParams: ~

mesh:
  enabled: false # Switch to true in production
  # image_version: 1.15.1-2 # image_version is defined globally by SRE. May be overridden here, though.
  public_port: 8080 # the port where TLS will be exposed
  upstream_timeout: "180.0s"
  # To be defined in a private space
  certs:
    cert: "snakeoil"
    key: "snakeoil"
  # Add here, via our "secret" system, the cert/key pairs
  #   cert: "your cert here"
  #   key: "your key here"
  # Enable telemetry
  telemetry:
    enabled: true
    port: 9361

# Additional resources if we want to add a port for a debugger to connect to.
debug:
  enabled: false
  # Define here any port that you want to expose for debugging purposes
  ports: []

networkpolicy:
  egress:
    enabled: false

php:
  httpd:
    image_name: "httpd-fcgi"
    version: "2.4.38-4"
    port: "8080"
    exporter_version: 0.0.4
    requests:
      cpu: 200m # Just some sample, edit this
      memory: 200Mi # Just some sample, edit this
    limits:
      cpu: 1 # Just some sample, edit this
      memory: 400Mi # Just some sample, edit this
  fcgi_mode: FCGI_TCP
  exporter_version: 0.0.4
  servergroup: main
  opcache:
    size: "200"
    nofiles: "1000"
  apc:
    size: "200M"
  workers: 2
  # Disable php-fpm's slowlog, useless plus needs ptrace capability (T288315)
  slowlog_timeout: 0
  # IMPORTANT: This is the PHP timeout, but it does not affect Shellbox's child processes.
  # Therefore, the timeout set here must be the same as $wgMaxShellWallClockTime in MediaWiki
  # config, otherwise the shell commands will keep running after request termination.
  timeout: 60
# See the dockerfiles for the php-fpm base image to know what can be tweaked.
# Those can be passed via config.public above.

app:
  port: 8080
