helm_scaffold_version: 0.4
docker:
  registry: docker-registry.wikimedia.org
  pull_policy: IfNotPresent
resources:
  replicas: 1
main_app:
  type: "default"
  # Image is NOT specified in the chart as we require uses of this
  # chart to specify their own images.
  #image: wikimedia/my-aqs-http-gateway-image
  version: latest # we use latest everywhere in the defaults.
  port: 8080
  # Command and args will be set by the deployment also
  command: []
  args: []
  requests:
    cpu: 200m
    memory: 200Mi
  limits:
    cpu: 1
    memory: 400Mi
  liveness_probe:
    tcpSocket:
      port: 8080
  readiness_probe:
    httpGet:
      path: /healthz
      port: 8080
  volumes:
    - name: config-volume
      configMap:
        name: aqs-http-gateway-base-config
  volumeMounts:
    - name: config-volume
      mountPath: /etc/aqs-http-gateway/

  druid:
    host: http://localhost
    port: 8082

  config_table: aqs.config
  cassandra_user: "foo"
  consistency: "one"
  datacentre: "local"
  cassandra_hosts: []
  log_level: "info"

monitoring:
  enabled: false

service:
  deployment: minikube # valid values are "production" and "minikube"
  port:
    name: http
    targetPort: 8080
    port: 8080
    nodePort: null

config:
  public: {}
  private:
    cassandra_pass: "bar"
    druid_pass: "bar"

mesh:
  enabled: false # Switch to true in production
  public_port: 30443 # the port where TLS will be exposed
  upstream_timeout: "180.0s"
  certs:
    cert: "snakeoil"
    key: "snakeoil"
  telemetry:
    enabled: true
    port: 9361

debug:
  enabled: false
  ports: []

networkpolicy:
  egress:
    enabled: true

affinity: {}

# This chart assumes all instances will use ingress to access the service
# https://wikitech.wikimedia.org/wiki/Kubernetes/Ingress#Configuration_(for_service_owners)
ingress:
  enabled: false
  # By default, enabling ingress will switch the charts services from type NodePort to
  # ClusterIP. While that is fine for new services it may not be desired during transition
  # of existing ones from dedicated LVS to Ingress.
  # By setting keepNodePort to true, the services will stay of type NodePort.
  keepNodePort: false
  staging: false
  # gatewayHosts settings configure the hostnames this service will be reachable on.
  # By default, this will be a list like:
  # - {{ gatewayHosts.default }}.discovery.wmnet
  # - {{ gatewayHosts.default }}.svc.codfw.wmnet
  # - {{ gatewayHosts.default }}.svc.eqiad.wmnet
  #
  # And in case .Values.ingress.staging is true:
  # - {{ gatewayHosts.default }}.k8s-staging.discovery.wmnet
  gatewayHosts:
    # default will expand to {{ .Release.Namespace }} as long as it is an empty string.
    default: ""
    # disableDefaultHosts may be set to true if the service should not be reachable via
    # the gateway hosts generated by default (see above).
    disableDefaultHosts: false
    # extraFQDNs is a list of extra FQDNs this service should be reachable on.
    # It can be used to extend the gateway hosts that are generated by default.
    extraFQDNs: []
  # If you want to attach routes of this release to an existing Gateway, provide the name
  # of that gateway here in the format: <namespace>/<gateway-name>
  # This is useful if you wish to make multiple releases available from the same hostname.
  existingGatewayName: ""
  # routeHosts is a list of FQDNs the httproutes should attach to.
  # If existingGatewayName not set, this list might be empty and will default to the gateway
  # host generated according to how .Values.gatewayHosts.* is configured.
  # If existingGatewayName is set, you need to provide the FQDNs your routes should attach to.
  routeHosts: []
  # HTTPRoute routing rules. By default https://<hosts from above>/ will be routed to
  # the service without modification.
  # Docs: https://istio.io/v1.9/docs/reference/config/networking/virtual-service/#HTTPRoute
  httproutes: []

app:
  port: 8080

# The set of external services to allow egress to
# Example:
# kafka:
# - main-codfw
# - main-eqiad
# presto:
# - analytics
#
# See https://wikitech.wikimedia.org/wiki/Kubernetes/Deployment_Charts#Enabling_egress_to_services_external_to_Kubernetes
# for the list of supported services
external_services: {}