apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "base.name.release" . }}
  labels:
    app: {{ template "base.name.chart" . }}
    chart: {{ template "base.name.chartid" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "base.name.chart" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.resources.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "base.name.chart" . }}
        release: {{ .Release.Name }}
        routed_via: {{ .Values.routed_via | default .Release.Name }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.monitoring.enabled -}}
        prometheus.io/scrape: "true"
          {{- if .Values.monitoring.uses_statsd -}}
        checksum/prometheus-statsd: {{ .Files.Get "config/prometheus-statsd.conf" | sha256sum }}
          {{- end -}}
        {{- end -}}
        {{- include "mesh.name.annotations" . | indent 8}}
    spec:
      {{- if .Values.affinity }}
      {{- toYaml .Values.affinity | nindent 6 }}
      {{- end }}
      containers:
      {{- include "default.containers" . | indent 8}}
      {{- include "mesh.deployment.container" . | indent 8}}
      {{- include "httpd-exporter" . | indent 8}}
      volumes:
        {{- if .Values.configMaps }}
        {{- range $configName, $configData := .Values.configMaps }}
        - name: {{ $configName }}
          configMap:
            name: {{ $.Release.Name }}-{{ $configName }}
        {{- end }}
        {{- end }}
        {{ with .Values.main_app.volumes -}}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- include "mesh.deployment.volume" . | indent 8}}
