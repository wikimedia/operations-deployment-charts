{{- define "config.app" -}}
# service-runner EventGate app config.yaml.
service_name: {{ .Values.main_app.name }}

# Number of worker processes to spawn.
# Set to 0 to run everything in a single process without clustering.
# Use 'ncpu' to run as many workers as there are CPU units
# NOTE: If main_app.num_workers is set to 0, it will evaluate to false in
# a template conditional.  The user may want to set num_workers to 0, so
# we need to check it in a different way.
# See: https://github.com/helm/helm/issues/3164#issuecomment-709537506
#
# This eventgate chart defaults to num_workers: 0.  This should work better
# with k8s CPU scheduling, as there will be fewer threads to divide work between.
num_workers: {{ if not (kindIs "invalid" .Values.main_app.num_workers) }}{{ .Values.main_app.num_workers }}{{ else }}{{ 0 }}{{ end }}

# Log error messages and gracefully restart a worker if v8 reports that it
# uses more heap (note: not RSS) than this many mb.
worker_heap_limit_mb: {{ .Values.main_app.worker_heap_limit_mb | default 200 }}

# Logger info
logging:
  level:  {{ .Values.main_app.log_level | default "info" }}
  streams:
    - type: stdout
      named_levels: true

{{- if .Values.monitoring.enabled }}
# Statsd metrics reporter
metrics:
  name: {{ .Values.main_app.name }}
  type: prometheus
  port: 9102
{{- end }}

{{- if .Values.main_app.extra_service_runner_conf }}
{{ toYaml .Values.main_app.extra_service_runner_conf | indent 0 }}
{{- end }}

services:
  - name: {{ .Values.main_app.name }}
    # We want service-runner to start eventgate.
    # Since eventgate is also a library, it exports the
    # service-runner app as 'app'.
    module: '{{ .Values.main_app.module | default "@wikimedia/eventgate" }}'
    entrypoint: app
    conf:
      port: {{ .Values.app.port }}
{{- if empty .Values.main_app.conf.cors }}
      # Default cors to false.
      cors: false
{{- end }}
      user_agent: {{ template "base.name.release" . }}

      eventgate_factory_module: '/srv/service/eventgate-wikimedia.js'

      # If a validation error is encountered, a validation error event
      # will be produced to this stream.
      # This should be set in release specific values files.
      # In production, this should be prefixed with service name,
      # e.g. eventgate-analytics, eventgate-main
      error_stream: {{ .Values.main_app.name }}.error.validation

      # eventgate app settings
{{ toYaml .Values.main_app.conf | indent 6 }}

{{- end }}
