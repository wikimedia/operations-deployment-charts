{{ if not (hasSuffix "canary" .Release.Name) }}
{{ if not .Values.mesh.enabled }}
  {{- template "app.generic.service" . }}
{{- end }}
{{- if .Values.debug.enabled }}
  {{- template "app.generic.debug_service" . }}
{{- end }}
{{- if not $.Values.devenv.enabled }}
{{ include "mesh.service" . }}
{{- end }}
{{- end }}

{{- if eq $.Values.config.airflow.config.core.executor "LocalExecutor" }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "release.name" . }}-scheduler
  {{- include "base.meta.labels" . | indent 2 }}
    component: scheduler
spec:
  type: ClusterIP
  selector:
    app: airflow
    component: scheduler
  ports:
    - name: airflow-scheduler
      protocol: TCP
      port: {{ $.Values.scheduler.local_executor_api_port }}
      targetPort: {{ $.Values.scheduler.local_executor_api_port }}
{{- end }}

{{- if $.Values.mesh.enabled }}
{{- if $.Values.discovery | default false }}
{{- if $.Values.discovery.listeners | default false }}
{{- if not $.Values.devenv.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: envoy
spec:
  type: {{ template "base.helper.serviceType" . }}
  selector:
    app: {{ template "base.name.chart" . }}
    routed_via: {{ .Release.Name }}
    component: envoy
  ports:
  {{- range $name := $.Values.discovery.listeners }}
  {{- $listener := index $.Values.services_proxy $name }}
  - name: {{ $name }}
    port: {{ $listener.port }}
    targetPort: {{ $listener.port }}
    protocol: TCP
  {{- end }}
{{- end }}
---
{{/* We duplicate the service with the name airflow-envoy, and we'll have to reflect this change in airflow-dags once deployed everywhere. */}}
apiVersion: v1
kind: Service
metadata:
  name: {{ template "service.envoy" . }}
spec:
  type: {{ template "base.helper.serviceType" . }}
  selector:
    app: {{ template "base.name.chart" . }}
    routed_via: {{ .Release.Name }}
    component: envoy
  ports:
  {{- range $name := $.Values.discovery.listeners }}
  {{- $listener := index $.Values.services_proxy $name }}
  - name: {{ $name }}
    port: {{ $listener.port }}
    targetPort: {{ $listener.port }}
    protocol: TCP
  {{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- if $.Values.monitoring.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "service.statsd" . }}
  {{- include "base.meta.labels" . | indent 2 }}
    component: scheduler
spec:
  selector:
    app: airflow
    release: "{{ $.Release.Name }}"
    component: statsd
  ports:
    - name: statsd-tcp
      protocol: TCP
      port: {{ $.Values.monitoring.statsd.port }}
      targetPort: {{ $.Values.monitoring.statsd.port }}
    - name: statsd-udp
      protocol: UDP
      port: {{ $.Values.monitoring.statsd.port }}
      targetPort: {{ $.Values.monitoring.statsd.port }}
    - name: prometheus-tcp
      protocol: TCP
      port: {{ $.Values.monitoring.prometheus_port }}
      targetPort: {{ $.Values.monitoring.prometheus_port }}
{{- end }}
