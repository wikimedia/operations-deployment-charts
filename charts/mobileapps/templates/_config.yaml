{{- define "config.app" -}}
# Number of worker processes to spawn.
# Set to 0 to run everything in a single process without clustering.
# Use 'ncpu' to run as many workers as there are CPU units
num_workers: 2

# Number of workers to start in parallel after the first worker.
# The first worker is always started independently. After it has completed
# its start-up, this number controls the number of workers to start in
# parallel until `num_workers` have been started. Note that setting this
# number to a too high a value might lead to high resource consumption
# (especially of CPU) during the start-up process.
startup_concurrency: 1

# Log error messages and gracefully restart a worker if v8 reports that it
# uses more heap (note: not RSS) than this many mb.
worker_heap_limit_mb: 750

# The maximum interval in ms that can pass between two beat messages
# sent by each worker to the master before it is killed
worker_heartbeat_timeout: 15000

# Logger info
logging:
  level: {{ .Values.logging.level }}
  name: mobileapps
  streams:
    - type: stdout
      named_levels: true

  {{- if .Values.monitoring.enabled }}
# Statsd metrics reporter
metrics:
  - name: mobileapps
    host: localhost
    port: 9125
    type: statsd
  - name: mobileapps-prometheus
    type: prometheus
    port: {{ .Values.monitoring.prometheus.port }}
  {{- end }}

services:
  - name: mobileapps
    # a relative path or the name of an npm package, if different from name
    module: ./app.js
    # per-service config
    conf:
      port: {{ .Values.app.port }}
      # interface: localhost # uncomment to only listen on localhost
      # more per-service config settings
      # the location of the spec, defaults to spec.yaml if not specified
      # spec: ./spec.template.yaml
      # allow cross-domain requests to the API (default '*')
      cors: '*'
      # to disable use:
      # cors: false
      # to restrict to a particular domain, use:
      # cors: restricted.domain.org
      # content for the CSP headers
      # csp: false  # uncomment this line to disable sending them
      # URL of the outbound proxy to use (complete with protocol)
      #      proxy: http://url-downloader.eqiad.wikimedia.org:8080
      # the list of domains for which not to use the proxy defined above
      # no_proxy_list:
      #   - domain1.com
      #   - domain2.org
      # the list of incoming request headers that can be logged; if left empty,
      # the following headers are allowed: cache-control, content-length,
      # content-type, if-match, user-agent, x-request-id
      # log_header_whitelist:
      #   - cache-control
      #   - content-length
      #   - content-type
      #   - if-match
      #   - user-agent
      #   - x-request-id
      # User-Agent HTTP header to use for requests
      user_agent: "Mobileapps/WMF"
      # the template used for contacting the MW API
      mwapi_req:
        method: post
        uri: {{ .Values.main_app.mwapi_uri }}
        headers:
          host: '{{ `{{request.params.domain}}` }}'
          user-agent: '{{ `{{user-agent}}` }}'
          accept-language: '{{ `{{accept-language}}` }}'
        body: '{{ `{{ default(request.query, {}) }}` }}'
      corepagehtml_req:
        method: GET
        uri: '{{ .Values.main_app.mwrestapi_uri }}/v1/page/{{ `{{title}}` }}/with_html'
        headers:
          host: '{{ `{{request.params.domain}}` }}'
          accept-language: '{{ `{{accept-language}}` }}'
      corerevisionhtml_req:
        method: GET
        uri: '{{ .Values.main_app.mwrestapi_uri }}/v1/revision/{{ `{{revision}}` }}/with_html'
        headers:
          host: '{{ `{{request.params.domain}}` }}'
          accept-language: '{{ `{{accept-language}}` }}'
      wikitexttohtml_req:
        method: POST
        uri: '{{ .Values.main_app.mwrestapi_uri }}/v1/transform/wikitext/to/html/{{ `{{title}}` }}'
        headers:
          host: '{{ `{{request.params.domain}}` }}'
          accept-language: '{{ `{{accept-language}}` }}'
        body: '{{ `{{request.body}}` }}'
      # the template used for contacting RESTBase
      restbase_req:
        method: '{{ `{{request.method}}` }}'
        uri: '{{ .Values.main_app.restbase_uri }}/{{ `{{domain}}` }}/v1/{+path}'
        query: '{{ `{{ default(request.query, {}) }}` }}'
        headers: '{{ `{{request.headers}}` }}'
        body: '{{ `{{request.body}}` }}'
        timeout: 60000
      # the template used for requesting ResourceLoader module content from load.php
      mw_resource_loader_req:
        method: post
        uri: '{{ .Values.main_app.mw_resource_loader_uri }}'
        headers:
          host: '{{ `{{request.params.domain}}` }}'
          user-agent: '{{ `{{user-agent}}` }}'
        body: '{{ `{{ default(request.query, {}) }}` }}'
      # the template used for outgoing eventgate requests for sending resource changes
      eventgate_req:
        method: POST
        uri: '{{ .Values.main_app.eventgate_uri }}'
        headers:
          content-type: 'application/json'
        body: '{{ `{{request.body}}` }}'
      # REST API external base URIs (for injection into mobile-html output)
      mobile_html_rest_api_base_uri: {{ .Values.main_app.mobile_html_rest_api_base_uri }}
      mobile_html_local_rest_api_base_uri_template: //{{ `{{domain}}` }}/api/rest_v1/
      mobile_html_csp: {{ .Values.main_app.mobile_html_csp }}
      mobile_view_languages:
        - zh
        - kk
      restbase_compatibility:
        security_headers: false
      use_coreparsoid_endpoint: {{ .Values.main_app.use_coreparsoid_endpoint }}
      {{- if .Values.main_app.caching.enabled }}
      caching:
        excludedUserAgents: {{ .Values.main_app.caching.excludedUserAgents }}
        enabled: {{ .Values.main_app.caching.enabled }}
        ttl: {{ .Values.main_app.caching.ttl }}
        maxJitter: {{ .Values.main_app.caching.maxJitter }}
        cassandra:
          keyspace: {{ .Values.main_app.caching.cassandra.keyspace }}
          storageTable: {{ .Values.main_app.caching.cassandra.storageTable }}
        event:
          stream:
            change: {{ .Values.main_app.caching.event.stream.change }}
            purge: {{ .Values.main_app.caching.event.stream.purge }}
      {{- end }}
{{ if .Values.datastore.cassandra_client.enabled -}}
{{ include "datastore.cassandra_client.config" . | indent 6 }}
{{- end -}}
{{- end -}}
