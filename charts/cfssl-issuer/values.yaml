# Default values for cfssl-issuer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

priorityClassName: "system-cluster-critical"

image:
  repository: docker-registry.wikimedia.org
  name: cfssl-issuer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This chart will need to grant additional roles to the cert-manager
# service account.
cert_manager:
  namespace: cert-manager
  serviceAccount: cert-manager

# Configure one or more cfssl Issuers here
issuers: {}
#  foo-issuer:
#    kind: Issuer # or ClusterIssuer
#    # namespace is only needed in case of Issuer, ignored for ClusterIssuer
#    namespace: "some-namespace"
#    # authSecretName can be an existing Secret object or a new Secret managed by this chart
#    # with the content provided in .authSecret.
#    authSecretName: "clusterissuer-sample-credentials"
#    # url must contain one or more comma seperated URLs to CFSSL multirootca API endpoints.
#    url: "https://api.simple-cfssl.svc.cluster.local:30888,https://dead.end.local"
#    # label specifies the CFSSL signer to use
#    label: "intermediate1"
#    # profile is an optional parameter specifying the CFSSL signing profile to use.
#    # If omitted, "default" is used.
#    profile: "server"
#    # bundle is an optional parameter specifying whether to return an "optimal" bundle
#    # rather than a certificate.
#    # WARNING: This is not supported by current cfssl multirootca upstream releases.
#    #          You will need to use a patched version, which can be found at:
#    #          https://github.com/wikimedia/cfssl/tree/wmf
#    #          The upstream PR is: https://github.com/cloudflare/cfssl/pull/1218
#    bundle: false
#    # If authSecret is provided, a secret named .authSecretName will be created
#    # in the namespace of this issuer (release namespace in case of ClusterIssuer)
#    authSecret:
#      key: "plaintext key, will be base64 encoded by template"
#      additional_data: "base64 data, as this might be binary" # optional

nameOverride: ""
fullnameOverride: ""

podSecurityContext: {}
  # fsGroup: 2000

resources:
  requests:
    cpu: 200m
    memory: 150Mi
  limits:
    cpu: 200m
    memory: 250Mi

nodeSelector: {}

tolerations: []

affinity: {}

# The set of external services to allow egress to
# See https://wikitech.wikimedia.org/wiki/Kubernetes/Deployment_Charts#Enabling_egress_to_services_external_to_Kubernetes
# for the list of supported services
external_services: {}

# example with multirootca
#external_services:
#  pki: [ "multirootca" ]

# Specify the name of a secret object containing a CA certificate
# to use instead of the default certificate bundle (from wmf-certificates).
overrideCA:
  secretName: ""
  fileName: "ca.pem" # the name of the file in the secret, defaults to ca.pem