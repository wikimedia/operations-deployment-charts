apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: {{ template "base.meta.name" (dict "Root" .) }}
  labels:
    app: {{ template "base.name.chart" . }}
    chart: {{ template "base.name.chartid" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- if .Values.comment }}
    comment: {{ .Values.comment | quote }}
    {{- end }}

spec:
  image: {{ .Values.app.image }}:{{ .Values.app.version }}
  imagePullPolicy: {{ .Values.docker.pull_policy }}
  flinkVersion: {{ .Values.app.flinkVersion }}
  mode: native
  {{- /*
  NOTE: serviceAccount must match the ServiceAccount created by
  flink-kubernetes-operator from .Values.jobServiceAccount.name.
  */}}
  serviceAccount: flink
  restartNonce: {{ .Values.app.restartNonce | default 1 }}

  job:
    {{- with .Values.app.job | default dict }}
    {{- /*
    app.job.pythonEntryPoint is sugar to abstract JobSpec params for launching Flink Python jobs.
    If app.job.pythonEntryPoint is set, entryClass and args will be set appropriately.
    */}}
    {{- if .pythonEntryPoint }}
    entryClass: org.apache.flink.client.python.PythonDriver
    {{- $args := concat (list "-py" .pythonEntryPoint ) .args }}
    {{- $jobSpec := merge (dict "args" $args) . }}
    {{- $_ := unset $jobSpec "pythonEntryPoint" }}
    {{- (toYaml $jobSpec ) | nindent 4 }}
    {{- else }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}

  flinkConfiguration:
    ### Default configuration
    rest.port: "{{ .Values.app.port }}"
    {{- if ne .Values.service.deployment "none" }}
    # Expose a ClusterIP Service for the  Flink REST UI.
    # This can be accessed by kubectl port-forward.
    # See https://nightlies.apache.org/flink/flink-docs-master/docs/deployment/resource-providers/native_kubernetes/#accessing-flinks-web-ui
    # and also this chart's NOTES.txt.
    kubernetes.rest-service.exposed.type: ClusterIP
    {{- end }}
    {{- if .Values.monitoring.enabled }}
    metrics.reporters: prometheus
    metrics.reporter.prometheus.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
    metrics.reporter.prometheus.port: "9999"
    {{- end }}

    {{- with $store := .Values.flink.object_store }}
    ### Flink object store configuration
    s3.access-key:  {{ $store.swift_access_key }}
    s3.secret-key: {{ $store.swift_secret_key }}
    s3.endpoint: {{ $store.swift_cluster }}
    s3.path.style.access: "true"
    state.savepoints.dir: s3://{{ $store.swift_bucket }}/{{ $.Release.Name }}/savepoints
    state.checkpoints.dir: s3://{{ $store.swift_bucket }}/{{ $.Release.Name }}/checkpoints

    {{- with $ha := $.Values.flink.high_availability }}
    ### Flink high-availability configuration
    high-availability: zookeeper
    high-availability.storageDir: s3://{{ $store.swift_bucket }}/{{ $.Release.Name }}/zookeeper_ha_storage
    high-availability.zookeeper.quorum: {{ $ha.zookeeper_quorum }}
    high-availability.zookeeper.path.root: /flink/{{ $.Values.environmentName }}/{{ $.Release.Namespace }}/{{ $.Release.Name }}
    {{- end }}
    {{- end }}

    {{- if .Values.app.flinkConfiguration }}
    ### User provided configuration
    # flinkConfiguration must be map of str: str.
    # Iterate through and quote the values, in case they look like integers.
    {{- range $key, $val := .Values.app.flinkConfiguration }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
    {{- end }}

  {{- if .Values.app.logConfiguration }}
  logConfiguration:
    log4j-console.properties: |+
      {{- $.Files.Get "conf/log4j-console.properties"  | nindent 6 }}
      # Logging config sourced from application helm values
      {{- range $key, $val := .Values.app.logConfiguration }}
      {{ $key }} = {{ $val }}
      {{- end }}
  {{- end }}

  # Use podTemplate to add WMF labels and annotations to all pods.
  # https://nightlies.apache.org/flink/flink-kubernetes-operator-docs-main/docs/custom-resource/pod-template/
  podTemplate:
    apiVersion: v1
    kind: Pod
    metadata:
      labels:
        {{- include "base.meta.pod_labels" . | indent 8 }}
      annotations:
        {{- include "base.meta.pod_annotations" . | indent 8 }}
        {{- include "mesh.name.annotations" . | indent 8 }}
        {{- if .Values.monitoring.enabled }}
        prometheus.io/port: "9999"
        {{- end }}
        {{- if .Values.app.config_files }}
        checksum/config_files:  {{ toYaml .Values.app.config_files | sha256sum }}
        {{- end }}
    {{- if or (or .Values.mesh.enabled .Values.app.env) .Values.app.config_files }}
    spec:
      {{- if .Values.debug.enabled | default false }}
      shareProcessNamespace: true
      {{- end }}
      containers:
        {{- if or .Values.app.env .Values.app.config_files}}
        - name: flink-main-container
          {{- if or .Values.app.env }}
          env:
            {{- if .Values.app.env | default false }}
            {{- toYaml .Values.app.env | nindent 12 }}
            {{- end }}
          {{- end }} # end env
          {{- if .Values.app.config_files }}
          volumeMounts:
          - name: flink-app-config-volume
            mountPath: /srv/app/conf
          {{- end }} # end volumeMounts
          {{- include "base.helper.restrictedSecurityContext" . | indent 10 }}
        {{- end }} # end flink-main-container
        {{- if .Values.debug.enabled | default false }}
        - name: flink-main-container-debug
          image: {{ .Values.docker.registry }}/wmfdebug:latest
          command: ["/bin/bash"]
          args: ["-c", "echo 'Sleeping infinitely...'; sleep infinity;"]
          securityContext:
            capabilities:
              add:
              - SYS_PTRACE
          stdin: true
          tty: true
        {{- end }} # end .Values.debug.enabled
        {{- include "mesh.deployment.container" . | indent 8 }}

      {{- if or .Values.mesh.enabled .Values.app.config_files }}
      volumes:
        {{- include "mesh.deployment.volume" . | indent 8 }}
        {{- if .Values.app.config_files }}
        - name: flink-app-config-volume
          configMap:
            name: {{ template "base.name.release" . }}-flink-app-config
            items:
              {{- range $k, $v := .Values.app.config_files }}
              - key: {{ $k }}
                path: {{ $k }}
              {{- end}}
        {{- end}}
      {{- end }} # end volumes
    {{- end }} # end spec

  jobManager:
    {{- toYaml .Values.app.jobManager | nindent 4 }}

  taskManager:
    {{- toYaml .Values.app.taskManager | nindent 4 }}
