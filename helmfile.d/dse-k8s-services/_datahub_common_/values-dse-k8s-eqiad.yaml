docker: &docker
  registry: "docker-registry.discovery.wmnet"

mesh:
  enabled: true


datahubUpgradeJob: &datahubUpgradeJob
  enabled: true
  docker: *docker
  image:
    tag: "2024-12-04-114340-6b4feed16d7d2b82de68b085fea2b7e9f3995471@sha256:b352b7575f418af0ebd98b2106626efc6c5f98ed4b2f0f7f84d927d05767d528"
  restoreIndices:
    resources:
      limits:
        memory: 1024Mi
      requests:
        memory: 512Mi


elasticsearchSetupJob:
  enabled: true
  docker: *docker
  image:
    tag: "2024-12-04-114340-6b4feed16d7d2b82de68b085fea2b7e9f3995471@sha256:9069a5ca5d1d4df908ab1ecb3ffa128354463b53e9f40c5c1f59d9ba67c20f4a"

mysqlSetupJob:
  enabled: true
  docker: *docker
  image:
    tag: "2024-12-04-114340-6b4feed16d7d2b82de68b085fea2b7e9f3995471@sha256:e05bba7d15e46e44e916c92ebf9c89e87fe7fafe867cf931c8bce92f5a6539aa"

kafkaSetupJob:
  enabled: false

datahubUpgrade:
  <<: *datahubUpgradeJob

datahubSystemUpdate:
  <<: *datahubUpgradeJob

networkpolicy:
  egress:
    enabled: true

datahub-frontend:
  main_app:
    version: "2024-12-04-114340-6b4feed16d7d2b82de68b085fea2b7e9f3995471@sha256:4a86b5f08afdfc5b075d7be94968c3313e1516c7e4387f85a0935e76f9352c59"
  docker: *docker

datahub-gms:
  main_app:
    version: "2024-12-04-114340-6b4feed16d7d2b82de68b085fea2b7e9f3995471@sha256:37abdb83d0361f9f5b454070b7ac30974891d8d24d3f88538d1d1aece754a9e6"
  docker: *docker

datahub-mce-consumer:
  main_app:
    version: "2024-12-04-114340-6b4feed16d7d2b82de68b085fea2b7e9f3995471@sha256:a1fe1abca468ec3b013fea7b7ac596044cea7ede2af37895dffdd9db5d71eb15"
  docker: *docker

datahub-mae-consumer:
  main_app:
    version: "2024-12-04-114340-6b4feed16d7d2b82de68b085fea2b7e9f3995471@sha256:9ccac04254e955034c50898e1b62a94c9e6650a81c32f57d4c51b21f89e2700f"
  docker: *docker

global:
  datahub_analytics_enabled: false
  datahub_standalone_consumers_enabled: true
  managed_ingestion:
    enabled: true
  datahub:
    gms:
      port: 8080
      useSSL: false
    systemUpdate:
      enabled: true
  elasticsearch:
    host: "datahubsearch.svc.eqiad.wmnet"
    port: "9200"
  kafka:
    schemaregistry:
      type: "INTERNAL"

datahubSystemUpdate:
  extraEnvs:
    - name: SPRING_KAFKA_PROPERTIES_AUTO_REGISTER_SCHEMAS
      value: "true"

external_services_app_label_selector: workload