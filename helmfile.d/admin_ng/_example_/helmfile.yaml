# You can include multiple releases in your helmfile, but you can't specify environments
# as they are defined in the parent helmfile.
#
# Each defined release will be installed into every environment that has install_RELEASE_NAME set to true.
#
# Be sure to include your new helmfile into the "bases:" array in the parent helmfile.

templates:
  default: &default
    namespace: RELEASE_NAMESPACE
    missingFileHandler: Warn
    installedTemplate: "{{`{{ .Environment.Values | get \"install_RELEASE_NAME\" false }}`}}"

releases:
  - name: RELEASE_NAME
    chart: wmf-stable/_EXAMPLE_
    {{- $version := .Values.chartVersions | get "wmf-stable/_EXAMPLE_" "" }}
    {{- if $version }}
    version: {{ $version }}
    {{- end }}
    <<: *default
    needs:
      # This is to ensure this helmfile is processed after namespaces, networking and DNS
      # is set up properly.
      # If you are sure you don't depend on any of that, remove the "needs".
      - kube-system/namespaces
      - kube-system/coredns
    values:
      # Generic default values for all environments
      - "values/common.yaml"
      # Default values for this cluster group
      - "values/{{ .Values.cluster_group }}.yaml"
      # Environment specific defaults
      - "values/{{ .Environment.Name }}/values.yaml"
      # Release specific overrides
      - "{{`{{ .Release.Name }}`}}/values.yaml"
      # Overrides specific to release in environment
      - "values/{{ .Environment.Name }}/{{`{{ .Release.Name }}`}}-values.yaml"
      # Secrets (from private puppet repo)
      - "/etc/helmfile-defaults/private/admin/{{`{{ .Release.Name }}`}}/{{ .Environment.Name }}.yaml"
