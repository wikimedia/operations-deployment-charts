
image:
  repository: docker-registry.discovery.wmnet/flink-kubernetes-operator
  tag: 1.12.1

# List of kubernetes namespaces to watch for FlinkDeployment changes.
# 'flink' ServiceAccounts will be created in each of these namespaces,
# and the 'flink-operator' ServiceAccount will be given permissions
# to create resources in these namespaces.
# Each 'release' (AKA helmfile service) namespace that uses the
# FlinkDeployment CRD MUST be listed here.
watchNamespaces: []

rbac:
  # NOTE: You must set this to true in your cluster specific helmfile values.
  # Set this to true ONLY IF you have also set values for watchNamespaces,
  # otherwise you will end up with cluster scoped RBAC resources being created.
  # See the README.md.
  create: false


# kubernetes.operator.leader-election.enabled is set to true below, so we can
# increase then number of flink-kubernetes-operator replicas.
replicas: 2

metrics:
  # PrometheusReporter is configured to expose metrics on this port.
  # NOTE: If you change this, it must also be changed for
  # prometheus.io/port and for
  # kubernetes.operator.metrics.reporter.prometheus.port
  # below.
  port: 9999

operatorPod:
  annotations:
    # Adding these annotations to the pods will cause our production
    # k8s Prometheus setup to scrape metrics from them.
    prometheus.io/scrape: "true"
    prometheus.io/port: "9999"
  resources:
    limits:
      cpu: "250m"
      memory: "512Mi"
    requests:
      cpu: "250m"
      memory: "512Mi"

defaultConfiguration:
  # Set append to false to replace configuration files
  append: false
  flink-conf.yaml: |+
    # Enable dynamic reloading of watchNamespaces.
    kubernetes.operator.dynamic.namespaces.enabled: true
    kubernetes.operator.dynamic.config.enabled: true

    # Enable Prometheus Metrics Reporter (named 'prometheus').
    # See: https://nightlies.apache.org/flink/flink-docs-master/docs/deployment/metric_reporters/
    kubernetes.operator.metrics.reporter.prometheus.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
    kubernetes.operator.metrics.reporter.prometheus.port: 9999

    # Enable flink-kubernetes-operator HA leader election.
    # This enables us to run standby replicas of the operator.
    kubernetes.operator.leader-election.enabled: true
    # This name must be unique per namespace.  As we only deploy
    # one flink operator per namespace, we can set this to the same
    # value for all operator deployments
    kubernetes.operator.leader-election.lease-name: flink-operator-lease

  # Make loggers only log to console in ECS format.
  log4j-operator.properties: |+
    # log4j config for the flink-kubernetes-operator.
    # Logs only to Console in ECS JSON format.
    rootLogger.level = INFO
    rootLogger.appenderRef.console.ref = ConsoleAppender

    # Log all infos to the console
    appender.console.name = ConsoleAppender
    appender.console.type = CONSOLE
    appender.console.layout.type = EcsLayout

  # This same config is duplicated into charts/flink-app/conf/log4j-console.properties to support
  # apps that extend the logging configuration. If updating here, update there as well.
  log4j-console.properties: |+
    # log4j config for Flink applications.
    # This will be used by JobManager and TaskManagers.
    # Logs only to Console in ECS JSON format.

    # Allow reloading logging config at runtime
    monitorInterval=300

    # This affects logging for both user code and Flink
    rootLogger.level = INFO
    rootLogger.appenderRef.console.ref = ConsoleAppender

    # Uncomment this if you want to _only_ change Flink's logging
    #logger.flink.name = org.apache.flink
    #logger.flink.level = INFO

    # The following lines keep the log level of common libraries/connectors on
    # log level INFO. The root logger does not override this. You have to manually
    # change the log levels here.
    logger.akka.name = akka
    logger.akka.level = INFO
    logger.kafka.name= org.apache.kafka
    logger.kafka.level = INFO
    logger.hadoop.name = org.apache.hadoop
    logger.hadoop.level = INFO
    logger.zookeeper.name = org.apache.zookeeper
    logger.zookeeper.level = INFO

    # Log all infos to the console in ECS format
    appender.console.name = ConsoleAppender
    appender.console.type = CONSOLE
    appender.console.layout.type = EcsLayout
    #appender.console.layout.serviceName = {{ .Release.Name }} # TODO?

    # Suppress the irrelevant (wrong) warnings from the Netty channel handler
    logger.netty.name = org.apache.flink.shaded.akka.org.jboss.netty.channel.DefaultChannelPipeline
    logger.netty.level = OFF

# Container (operator) security context. This will override podSecurityContext.
operatorSecurityContext:
  # These should match the uid/gid values in WMF's Flink image.
  # https://gerrit.wikimedia.org/r/c/operations/docker-images/production-images/+/858356/9/config.yaml#13
  runAsUser: 186
  runAsGroup: 186
  # All containers need to set a securityContext compatible with restricted PSS
  # https://phabricator.wikimedia.org/T362978
  allowPrivilegeEscalation: false
  capabilities:
     drop:
     - ALL
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault


# WMF does not use the Flink Kubernetes Webhook.
# https://phabricator.wikimedia.org/T324576#8456935
webhook:
  create: false

networkpolicy:
  egress:
    enabled: true