resources:
  replicas: 4

main_app:
  version: 1.23.10-3
  telemetry_port: 1667

  access_log:
    sample_percentage: 1

  requests:
    cpu: 1
    memory: 1Gi
  limits:
    cpu: 2
    memory: 2Gi

  domains:
    - rest-gateway.discovery.wmnet
    - rest-gateway.discovery.wmnet:*
    - "*.wikipedia.org"
    - "*.m.mediawiki.org"
    - "*.m.wikibooks.org"
    - "*.m.wikidata.org"
    - "*.m.wikimedia.org"
    - "*.m.wikimediafoundation.org"
    - "*.m.wikinews.org"
    - "*.m.wikipedia.org"
    - "*.m.wikiquote.org"
    - "*.m.wikisource.org"
    - "*.m.wikiversity.org"
    - "*.m.wikivoyage.org"
    - "*.m.wiktionary.org"
    - "*.mediawiki.org"
    - "*.planet.wikimedia.org"
    - "*.wikibooks.org"
    - "*.wikidata.org"
    - "*.wikimedia.org"
    - "*.wikimediafoundation.org"
    - "*.wikinews.org"
    - "*.wikiquote.org"
    - "*.wikisource.org"
    - "*.wikiversity.org"
    - "*.wikivoyage.org"
    - "*.wiktionary.org"
    - "*.wmfusercontent.org"
    - "*.zero.wikipedia.org"
    - mediawiki.org
    - w.wiki
    - wikibooks.org
    - wikidata.org
    - wikimedia.org
    - wikimediafoundation.org
    - wikinews.org
    - wikiquote.org
    - wikisource.org
    - wikiversity.org
    - wikivoyage.org
    - wiktionary.org
    - wmfusercontent.org
    - wikipedia.org
    # required for service mesh
    - "localhost:6033"

  # FOOTGUN ALERT: routes are strictly ordered. This means that if you
  # have multiple rules that potentially overlap, the LESS general
  # case should be first. For example, it's very common for
  # post-restbase rules to support PATH/PAGE/REVISION and
  # PATH/PAGE. If you define a (.+) regex for PATH/PAGE *before*
  # PATH/PAGE/REVISION, this rule will get matched first and
  # PAGE/REVISION will be passed as a single capture group
  rest_gateway_routes:
    - name: mobileapps
      timeout: 120s
      urls:
        #TODO tighten capture group criteria
        - name: ma_mobile_revision
          in: '(.+)/v1/page/mobile-html/(.+)/(.+)'
          out: '\1/v1/page/mobile-html/\2/\3'
        - name: ma_mobile_no_revision
          in: '(.+)/v1/page/mobile-html/(.+)'
          out: '\1/v1/page/mobile-html/\2'
        - name: ma_summary_revision
          in: '(.+)/v1/page/summary/(.+)/(.+)'
          out: '\1/v1/page/summary/\2/\3'
        - name: ma_summary_no_revision
          in: '(.+)/v1/page/summary/(.+)'
          out: '\1/v1/page/summary/\2'
        - name: ma_media_list_revision
          in: '(.+)/v1/page/media-list/(.+)/(.+)'
          out: '\1/v1/page/media-list/\2/\3'
        - name: ma_media_list_no_revision
          in: '(.+)/v1/page/media-list/(.+)'
          out: '\1/v1/page/media-list/\2'
        - name: ma_mobile_html_offline_resources
          in: '(.+)/v1/page/mobile-html-offline-resources/(.+)/(.+)'
          out: '\1/v1/page/mobile-html-offline-resources/\2/\3'
        - name: ma_mobile_html_offline_resources_no_revision
          in: '(.+)/v1/page/mobile-html-offline-resources/(.+)'
          out: '\1/v1/page/mobile-html-offline-resources/\2'
        - name: ma_data_css_mobile
          in: '(.+)/v1/data/css/mobile/(.+)'
          out: '\1/v1/data/css/mobile/\2'
        - name: ma_data_javascript_mobile
          in: '(.+)/v1/data/javascript/mobile/(.+)'
          out: '\1/v1/data/javascript/mobile/\2'
        - name: ma_data_i18n
          in: '(.+)/v1/data/i18n/(.+)/(.+)'
          out: '\1/v1/data/i18n/\2/\3'
        - name: ma_data_i18n_no_revision
          in: '(.+)/v1/data/i18n/(.+)'
          out: '\1/v1/data/i18n/\2'
        - name: ma_page_talk
          in: '(.+)/v1/page/talk/(.+)/(.+)'
          out: '\1/v1/page/talk/\2/\3'
        - name: ma_page_talk_no_revision
          in: '(.+)/v1/page/talk/(.+)'
          out: '\1/v1/page/talk/\2'
        - name: ma_page_definition
          in: '(.+)/v1/page/definition/(.+)/(.+)'
          out: '\1/v1/page/definition/\2/\3'
        - name: ma_page_definition_no_revision
          in: '(.+)/v1/page/definition/(.+)'
          out: '\1/v1/page/definition/\2'
        - name: ma_transform_wikitext_mobile_html
          in: '(.+)/v1/transform/wikitext/to/mobile-html/(.+)'
          out: '\1/v1/transform/wikitext/to/mobile-html/\2'
    - name: proton
      timeout: 150s
      urls:
        # Proton doesn't actually support not passing a format - restbase usually adds this
        - name: proton_title
          in: '(.+)/v1/page/pdf/([^/]+)'
          out: '\1/v1/pdf/\2/a4'
        - name: proton_title_format
          in: '(.+)/v1/page/pdf/(.+)/\b(a4|legal|letter)\b'
          out: '\1/v1/pdf/\2/\3'
        - name: proton_title_format_type
          in: '(.+)/v1/page/pdf/(.+)/\b(a4|legal|letter)\b/(.+)'
          out: '\1/v1/pdf/\2/\3/\4'
    - name: citoid
      timeout: 120s
      ingress: true
      urls:
          # We ignore the sitename (first matching group).
          # It is assumed the URL will be properly encoded here - ie /
          # replaced by %2F if needs be
        - name: citoid_query
          in: '(.+)/v1/data/citation/(.+)/(.+)'
          out: '/\2/\3'

    - name: wikifeeds
      timeout: 15s
      urls:
        - name: announcements
          in: '(.+)/v1/feed/announcements'
          out: '\1/v1/feed/announcements'
        - name: onthisday_all
          in: '(.+)/v1/feed/onthisday/all/(.+)/(.+)'
          out: '\1/v1/aggregated/onthisday/all/\2/\3'
        - name: onthisday
          in: '(.+)/v1/feed/onthisday/(.+)/(.+)/(.+)'
          out: '\1/v1/feed/onthisday/\2/\3/\4'
        - name: featured
          in: '(.+)/v1/feed/featured/(.+)/(.+)/(.+)'
          out: '\1/v1/aggregated/featured/\2/\3/\4'
        - name: availability
          in: '(.+)/v1/feed/availability'
          out: '\1/v1/feed/availability'
        - name: random
          in: '(.+)/v1/page/random/(.+)'
          out: '\1/v1/page/random/redirect/\2'

    - name: geo-analytics
      timeout: 15s
      ingress: true
      urls:
        - name: api-spec
          in: '/wikimedia.org/v1/metrics/editors/by-country/api-spec.json'
          out: '/geo-analytics/api-spec.json'
        - name: geo-editors
          in: '/wikimedia.org/v1/metrics/editors/by-country/(.+)'
          out: '/metrics/editors/by-country/\1'

    - name: media-analytics
      timeout: 15s
      ingress: true
      urls:
        - name: api-spec
          in: '/wikimedia.org/v1/metrics/mediarequests/api-spec.json'
          out: '/mediarequests/api-spec.json'
        - name: mediarequests
          in: '/wikimedia.org/v1/metrics/mediarequests/(.+)'
          out: '/metrics/mediarequests/\1'

    - name: edit-analytics
      timeout: 5s
      ingress: true
      urls:
        - name: api-spec
          in: '/wikimedia.org/v1/metrics/edits/api-spec.json'
          out: '/edit-analytics/api-spec.json'
        - name: edits
          in: '/wikimedia.org/v1/metrics/edits/(.+)'
          out: '/metrics/edits/\1'
        - name: bytes_difference
          in: '/wikimedia.org/v1/metrics/bytes-difference/(.+)'
          out: '/metrics/bytes-difference/\1'
        - name: edited_pages
          in: '/wikimedia.org/v1/metrics/edited-pages/(.+)'
          out: '/metrics/edited-pages/\1'

    - name: editor-analytics
      timeout: 5s
      ingress: true
      urls:
        - name: api-spec
          in: '/wikimedia.org/v1/metrics/editors/api-spec.json'
          out: '/editors/api-spec.json'
        - name: edits
          in: '/wikimedia.org/v1/metrics/editors/(.+)'
          out: '/metrics/editors/\1'
        - name: registered
          in: '/wikimedia.org/v1/metrics/registered-users/(.+)'
          out: '/metrics/registered-users/\1'

    - name: page-analytics
      timeout: 5s
      ingress: true
      urls:
        - name: api-spec
          in: '/wikimedia.org/v1/metrics/pageviews/api-spec.json'
          out: '/page-analytics/api-spec.json'
        - name: pageviews
          in: '/wikimedia.org/v1/metrics/pageviews/(.+)'
          out: '/metrics/pageviews/\1'
        - name: legacy
          in: '/wikimedia.org/v1/metrics/legacy/(.+)'
          out: '/metrics/legacy/\1'

    - name: device-analytics
      timeout: 15s
      urls:
        - name: api-spec
          in: '/wikimedia.org/v1/metrics/unique-devices/api-spec.json'
          out: '/device-analytics/api-spec.json'
        - name: unique-devices
          in: '/wikimedia.org/v1/metrics/unique-devices/(.+)'
          out: '/metrics/unique-devices/\1'

    - name: commons-impact-analytics
      timeout: 15s
      ingress: true
      urls:
        - name: api-spec
          in: '/wikimedia.org/v1/metrics/commons-analytics/api-spec.json'
          out: '/commons-impact-analytics/api-spec.json'
        - name: commons-analytics
          in: '/wikimedia.org/v1/metrics/commons-analytics/(.+)'
          out: '/metrics/commons-analytics/\1'

    - name: mw-api-int
      timeout: 15s
      request_headers_to_add:
        - key: x-restbase-compat
          value: true
      urls:
        # T374683
        # NOTE: Revision regexps come first as the title regexps are broad
        # enough to match the revision ones as well, ordering to the rescue
        # NOTE: The REST gateway, in the same spirit as RESTBase before it,
        # assumes the caller will be URL encoding the page titles so that if
        # they have slashes in them.
        #
        # e.g. Foo/Bar/Baz should become Foo%2FBar%2FBaz
        #
        # before reaching REST gateway.
        # In case a non URL encoded page with slashes is submitted, it's the
        # duty of MediaWiki to return the appropriate response (and MediaWiki
        # does return a 404)
        - name: page-metadata-revision
          in: '(.+)/v1/page/title/([^\/]+)/(.+)'
          out: '/w/rest.php/v1/revision/\3/bare'
        - name: page-metadata-title
          in: '(.+)/v1/page/title/(.+)'
          out: '/w/rest.php/v1/page/\2/bare'
        - name: page-html-revision
          in: '(.+)/v1/page/html/([^\/]+)/(.+)'
          out: '/w/rest.php/v1/revision/\3/html'
        - name: page-html-title
          in: '(.+)/v1/page/html/(.+)'
          out: '/w/rest.php/v1/page/\2/html'
        - name: lint-revision
          in: '(.+)/v1/page/lint/([^\/]+)/(.+)'
          out: '/w/rest.php/v1/transform/wikitext/to/lint/\2/\3'
        - name: lint-no-revision
          in: '(.+)/v1/page/lint/([^\/]+)'
          out: '/w/rest.php/v1/transform/wikitext/to/lint/\2'
        # reading lists endpoint - supports all HTTP verbs for various options
        # Note use of * rather than + in regex - needed to match base
        # `/v1/data/lists/` requests which requires the trailing slash
        - name: lists
          in: '(.+)/v1/data/lists/(.*)'
          out: '/w/rest.php/readinglists/v0/lists/\2'

  discovery_endpoints:
    # Remember to add the corresponding svc.$dc.wmnet entry in egress
    mobileapps:
      tls: true
      port: 4102
    proton:
      tls: true
      port: 4030
    citoid:
      ingress: true
      port: 30443 # ingress
      tls: true
      internal_host: citoid-ingress.discovery.wmnet
    wikifeeds:
      tls: true
      port: 4101
    device-analytics:
      port: 4972
      tls: true
    geo-analytics:
      ingress: true
      port: 30443 # ingress
      tls: true
    media-analytics:
      ingress: true
      port: 30443 # ingress
      tls: true
    page-analytics:
      ingress: true
      port: 30443 # ingress
      tls: true
    edit-analytics:
      ingress: true
      port: 30443 # ingress
      tls: true
    editor-analytics:
      ingress: true
      port: 30443 # ingress
      tls: true
    commons-impact-analytics:
      ingress: true
      port: 30443 # ingress
      tls: true
    mw-api-int:
      tls: true
      port: 4446

service:
  deployment: production
  port:
    nodePort: 4113

mesh:
  enabled: true
  telemetry:
    enabled: true
  certmanager:
    extraFQDNs:
      - '*.m.mediawiki.org'
      - '*.m.wikibooks.org'
      - '*.wikipedia.org'
      - '*.m.wikidata.org'
      - '*.m.wikimedia.org'
      - '*.m.wikimediafoundation.org'
      - '*.m.wikinews.org'
      - '*.m.wikipedia.org'
      - '*.m.wikiquote.org'
      - '*.m.wikisource.org'
      - '*.m.wikiversity.org'
      - '*.m.wikivoyage.org'
      - '*.m.wiktionary.org'
      - '*.mediawiki.org'
      - '*.planet.wikimedia.org'
      - '*.wikibooks.org'
      - '*.wikidata.org'
      - '*.wikimedia.org'
      - '*.wikimediafoundation.org'
      - '*.wikinews.org'
      - '*.wikiquote.org'
      - '*.wikisource.org'
      - '*.wikiversity.org'
      - '*.wikivoyage.org'
      - '*.wiktionary.org'
      - '*.wmfusercontent.org'
      - '*.zero.wikipedia.org'
      - 'mediawiki.org'
      - 'w.wiki'
      - 'wikibooks.org'
      - 'wikidata.org'
      - 'wikimedia.org'
      - 'wikimediafoundation.org'
      - 'wikinews.org'
      - 'wikiquote.org'
      - 'wikisource.org'
      - 'wikiversity.org'
      - 'wikivoyage.org'
      - 'wiktionary.org'
      - 'wmfusercontent.org'
      - 'wikipedia.org'

discovery:
  listeners:
  - mobileapps

networkpolicy:
  egress:
    enabled: true
    dst_nets:
    - cidr: 10.2.1.14/32 # mobileapps.svc.codfw.wmnet
      ports:
        - protocol: tcp
          port: 4102
    - cidr: 10.2.2.14/32 # mobileapps.svc.eqiad.wmnet
      ports:
        - protocol: tcp
          port: 4102
    - cidr: 10.2.1.21/32 # proton.svc.codfw.wmnet
      ports:
        - protocol: tcp
          port: 4030
    - cidr: 10.2.2.21/32 # proton.svc.eqiad.wmnet
      ports:
        - protocol: tcp
          port: 4030
    - cidr: 10.2.1.47/32 # wikifeeds.svc.codfw.wmnet
      ports:
        - protocol: tcp
          port: 4101
    - cidr: 10.2.2.47/32 # wikifeeds.svc.eqiad.wmnet
      ports:
        - protocol: tcp
          port: 4101
    - cidr: 10.2.1.19/32 # citoid.svc.codfw.wmnet
      ports:
        - protocol: tcp
          port: 4003
    - cidr: 10.2.2.19/32 # citoid.svc.eqiad.wmnet
      ports:
        - protocol: tcp
          port: 4003
    - cidr: 10.2.2.70/32 # k8s-ingress-wikikube-ro.discovery.wmnet (eqiad)
      ports:
        - protocol: tcp
          port: 30443
    - cidr: 10.2.1.70/32 # k8s-ingress-wikikube-ro.discovery.wmnet (codfw)
      ports:
        - protocol: tcp
          port: 30443
    - cidr: 10.2.2.69/32 # *.k8s-staging.discovery.wmnet (eqiad)
      ports:
        - protocol: tcp
          port: 30443
    - cidr: 10.2.1.69/32 # *.k8s-staging.discovery.wmnet (codfw)
      ports:
        - protocol: tcp
          port: 30443
    - cidr: 10.2.2.80/32 # device-analytics.discovery.wmnet (eqiad)
      ports:
        - protocol: tcp
          port: 4972
    - cidr: 10.2.1.80/32 # device-analytics.discovery.wmnet (codfw)
      ports:
        - protocol: tcp
          port: 4972
    - cidr: 10.2.2.81/32 # mw-api-int.discovery.wmnet (eqiad)
      ports:
        - protocol: tcp
          port: 4446
    - cidr: 10.2.1.81/32 # mw-api-int.discovery.wmnet (codfw)
      ports:
        - protocol: tcp
          port: 4446
