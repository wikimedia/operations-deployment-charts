app:
  taskManager:
    # staging only processes a limited set of wikis, request less
    replicas: 1

  config_files:
    app.config.yaml:
      pipeline.name: cirrus-streaming-updater-consumer-search-staging
      kafka-source-config.group.id: cirrus-streaming-updater-consumer-search-staging
      fetch-error-topic: eqiad.cirrussearch.update_pipeline.fetch_error.v1
      fetch-error-stream: cirrussearch.update_pipeline.fetch_error.v1
      # relforge doesn't have three clusters like the prod endpoints, point
      # it all at the same cluster.
      elasticsearch-urls.chi: https://relforge1010.eqiad.wmnet:9243
      elasticsearch-urls.omega: https://relforge1010.eqiad.wmnet:9243
      elasticsearch-urls.psi: https://relforge1010.eqiad.wmnet:9243
      # The normal .*= route ends up catching the elasticsearch urls above.
      # Define a relforge route that doesn't change anything to avoid that.
      http-routes.00-relforge: https://relforge1010.eqiad.wmnet:9243=https://relforge1010.eqiad.wmnet:9243
      http-routes.99-mwapi: .*=http://localhost:6500

mesh:
  concurrency: 1
  resources:
    # staging only processes a limited set of wikis, request less
    requests:
      cpu: 500m

discovery:
  listeners:
    - mw-api-int-async-ro
    - schema
    - thanos-swift # cluster for checkpoints
