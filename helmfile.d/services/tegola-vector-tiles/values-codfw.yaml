resources:
  replicas: 12

config:
  public:
    TEGOLA_BROKER_URL: "kafka://kafka-main-codfw.external-services.svc.cluster.local:9092"
    TEGOLA_QUEUE_NAME: "codfw.maps.tiles_change_bookworm.v1"

# Temporarily we will use envoy as a L4 tcp proxy until envoy's
# Postgres proxy filter is production ready
# https://www.envoyproxy.io/docs/envoy/latest/configuration/listeners/network_filters/postgres_proxy_filter#config-network-filters-postgres-proxy
tcp_services_proxy:
  maps_postgres:
    upstreams:
      # master node
      # - address: maps-test2001.codfw.wmnet
      #   port: 5432
      # read replicas
      - address: maps-test2002.codfw.wmnet
        port: 5432
      - address: maps-test2003.codfw.wmnet
        port: 5432
      - address: maps-test2004.codfw.wmnet
        port: 5432
      - address: maps-test2005.codfw.wmnet
        port: 5432

tileCaching:
  enabled: true
  config:
    bucket: tegola-swift-codfw-v003
    basepath: "shared-cache"

kafka:
  allowed_clusters:
    - main-codfw

tilePregeneration:
  cronJobEnabled: true

external_services:
  postgresql:
  - maps-bookworm-read-replicas-codfw
  - maps-bookworm-master-codfw
  kafka:
    - main-codfw
