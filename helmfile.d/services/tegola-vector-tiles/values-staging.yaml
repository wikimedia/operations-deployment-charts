resources:
  replicas: 1
  postgres:
    max_connections: 5

# Temporarily we will use envoy as a L4 tcp proxy until envoy's
# Postgres proxy filter is production ready
# https://www.envoyproxy.io/docs/envoy/latest/configuration/listeners/network_filters/postgres_proxy_filter#config-network-filters-postgres-proxy
tcp_services_proxy:
  maps_postgres:
    upstreams:
      # master node
      # - address: maps2009.codfw.wmnet
      #   port: 5432
      # read replicas
      - address: maps2005.codfw.wmnet
        port: 5432
      - address: maps2006.codfw.wmnet
        port: 5432
      - address: maps2007.codfw.wmnet
        port: 5432
      - address: maps2008.codfw.wmnet
        port: 5432
      - address: maps2009.codfw.wmnet
        port: 5432
      - address: maps2010.codfw.wmnet
        port: 5432

tileCaching:
  enabled: true
  config:
    basepath: "staging-v0.0.1"
    bucket: "tegola-swift-staging-container"

config:
  public:
    TEGOLA_BROKER_URL: "kafka://kafka-test-eqiad.external-services.svc.cluster.local:9092"
    TEGOLA_QUEUE_NAME: "tegola-staging"

tilePregeneration:
  cronJobEnabled: false
  parallelism: 1

kafka:
  allowed_clusters:
    - test-eqiad
  kafka:
    - test-eqiad
external_services:
  postgresql:
    # - maps-read-replicas-eqiad
    - maps-read-replicas-codfw
    - maps-master-codfw

main_app:
  postgres:
    user: tegola
