resources:
  replicas: 12

config:
  public:
    TEGOLA_BROKER_URL: "kafka://kafka-main-eqiad.external-services.svc.cluster.local:9092"
    TEGOLA_QUEUE_NAME: "eqiad.maps.tiles_change_bookworm.v1"

# Temporarily we will use envoy as a L4 tcp proxy until envoy's
# Postgres proxy filter is production ready
# https://www.envoyproxy.io/docs/envoy/latest/configuration/listeners/network_filters/postgres_proxy_filter#config-network-filters-postgres-proxy
tcp_services_proxy:
  maps_postgres:
    upstreams:
      # read replicas (the master node is left out on purpose to deal with data imports)
      # read replicas (the master node is left out on purpose to deal with data imports)
      - address: maps1012.eqiad.wmnet
        port: 5432
      - address: maps1013.eqiad.wmnet
        port: 5432
      - address: maps1014.eqiad.wmnet
        port: 5432

tileCaching:
  enabled: true
  config:
    bucket: tegola-swift-eqiad-v003

# avoid concurrency with codfw when pushing data to Swift
tilePregeneration:
  cronJobEnabled: true
  schedule: "0 12 * * *"

kafka:
  allowed_clusters:
    - main-eqiad

external_services:
  postgresql:
  - maps-bookworm-read-replicas-eqiad
  kafka:
    - main-eqiad
